version: 0.2
phases:
  install:
    runtime-versions:
      java: corretto8
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - REPOSITORY_HOST=595508394202.dkr.ecr.us-west-2.amazonaws.com
      - REPOSITORY_URI=$REPOSITORY_HOST/syn-bridge-servers
      - aws ecr get-login-password  | docker login --username AWS --password-stdin $REPOSITORY_HOST
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - mkdir -p dep-tmp/
      - get-artifact.rb craftbukkit-1.8.8-R0.1-SNAPSHOT.jar dep-tmp/
      - get-artifact.rb MockBukkit.jar dep-tmp/
      - mvn install:install-file -Dfile=dep-tmp/craftbukkit-1.8.8-R0.1-SNAPSHOT.jar -DgroupId=org.bukkit -DartifactId=craftbukkit -Dversion=1.8.8-R0.1-SNAPSHOT -Dpackaging=jar -DgeneratePom=true
      - mvn install:install-file -Dfile=dep-tmp/MockBukkit.jar -DgroupId=be.seeseemelk -DartifactId=mockbukkit -Dversion=1.8 -Dpackaging=jar -DgeneratePom=true
  build:
    commands:
      - echo Compile jars started on `date`
      - SYNDICATE_ENV=test MINECRAFT_HOME=$PWD mvn clean package -P package-all
      - echo Building the Docker image...
      - echo package the plugins as a tar
      - mkdir -p tmp
      - get-artifact.rb ProtocolLib.jar tmp/
      - get-artifact.rb jar-deps/jar-deps-v03.tar jar-deps.tar
      - get-artifact.rb cage.v02.json ./cage.json
      - find . -type f -path \*target\* -name \*jar -exec cp -p {} tmp/ \;
      - tar -C tmp -cvf ./plugins.tar .
      - echo running docker build
      - docker build -t $REPOSITORY_URI:latest .
      - echo not docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:latest
      - echo not tagging with $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
artifacts:
  files:
    - "**/target/*"
  discard-paths: yes
